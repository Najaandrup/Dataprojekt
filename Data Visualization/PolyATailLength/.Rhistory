a60_unmod['polyA_length'] <- a60_unmod$end - a60_unmod$start
a120_1mod['polyA_length'] <- a120_1mod$end - a120_1mod$start
a120_2mod['polyA_length'] <- a120_2mod$end - a120_2mod$start
a120_4mod['polyA_length'] <- a120_4mod$end - a120_4mod$start
a120_unmod['polyA_length'] <- a120_unmod$end - a120_unmod$start
# List of datasets
datasets <- list(
"a60_30" = a60_30,
"a60_60" = a60_60,
"a60_unmod" = a60_unmod,
"a120_1mod" = a120_1mod,
"a120_2mod" = a120_2mod,
"a120_4mod" = a120_4mod,
"a120_unmod" = a120_unmod
)
# Loop through datasets and plot one at a time
for (name in names(datasets)) {
# Open a new plotting window (optional, useful for some R environments)
dev.new()
# Create histogram
hist(datasets[[name]]$polyA_length,
probability = TRUE,
border = "white",
main = paste("Histogram of Poly(A) Tail Length -", name),
xlab = "Poly(A) Tail Length",
ylab = "Density",
breaks = 50,
col = "skyblue")
# Add density plot
lines(density(datasets[[name]]$polyA_length),
col = "red",
lwd = 2)
}
# Load required packages
library(ggplot2)
# List of datasets
datasets <- list(
"a60_30" = a60_30,
"a60_60" = a60_60,
"a60_unmod" = a60_unmod,
"a120_1mod" = a120_1mod,
"a120_2mod" = a120_2mod,
"a120_4mod" = a120_4mod,
"a120_unmod" = a120_unmod
)
# Loop through datasets and plot one at a time
for (name in names(datasets)) {
p <- ggplot(datasets[[name]], aes(x = polyA_length)) +
geom_histogram(aes(y = ..density..),
fill = "skyblue",
color = "white",
alpha = 0.7,
bins = 50) +
geom_density(color = "red", lwd = 1.2) +
theme_minimal() +
labs(title = paste("Histogram of Poly(A) Tail Length -", name),
x = "Poly(A) Tail Length",
y = "Density") +
theme(plot.title = element_text(size = 12, face = "bold"))
print(p)  # Print each plot one by one
}
knitr::opts_chunk$set(echo = TRUE)
a60_30 <- read.table(file = 'a60_30_polyA_position.tsv', sep = '\t', header = TRUE)
a60_60 <- read.table(file = 'a60_60_polyA_position.tsv', sep = '\t', header = TRUE)
a60_unmod <- read.table(file = 'a60_unmod_polyA_position.tsv', sep = '\t', header = TRUE)
a120_1mod <- read.table(file = 'a120_1mod_polyA_position.tsv', sep = '\t', header = TRUE)
a120_2mod <- read.table(file = 'a120_2mod_polyA_position.tsv', sep = '\t', header = TRUE)
a120_4mod <- read.table(file = 'a120_4mod_polyA_position.tsv', sep = '\t', header = TRUE)
a120_unmod <- read.table(file = 'a120_unmod_polyA_position.tsv', sep = '\t', header = TRUE)
a60_30['polyA_length'] <- a60_30$end - a60_30$start
a60_60['polyA_length'] <- a60_60$end - a60_60$start
a60_unmod['polyA_length'] <- a60_unmod$end - a60_unmod$start
a120_1mod['polyA_length'] <- a120_1mod$end - a120_1mod$start
a120_2mod['polyA_length'] <- a120_2mod$end - a120_2mod$start
a120_4mod['polyA_length'] <- a120_4mod$end - a120_4mod$start
a120_unmod['polyA_length'] <- a120_unmod$end - a120_unmod$start
hist(a60_30$polyA_length, probability = TRUE)
lines(density(a60_30$polyA_length), col = "red", lwd = 2)
hist(a60_30$polyA_length,
probability = TRUE,
main = "Density Plot of polyA Lengths",
xlab = "PolyA Length",
ylab = "Density",
xlim = c(0, 10000),        # Set x-axis from 0 to 10000
border = "black",          # Black border for the bars
breaks = 50)               # Adjust the number of breaks (bins)
lines(density(a60_30$polyA_length), col = "red", lwd = 2)
hist(a60_30$polyA_length,
probability = TRUE,
main = "Density Plot of polyA Lengths",
xlab = "PolyA Length",
ylab = "Density",
xlim = c(0, 10000),        # Set x-axis from 0 to 10000
border = "black",          # Black border for the bars
breaks = 75)               # Adjust the number of breaks (bins)
lines(density(a60_30$polyA_length), col = "red", lwd = 2)
hist(a60_30$polyA_length,
probability = TRUE,
main = "Density Plot of polyA Lengths",
xlab = "PolyA Length",
ylab = "Density",
xlim = c(0, 10000),        # Set x-axis from 0 to 10000
border = "black",          # Black border for the bars
breaks = 100)               # Adjust the number of breaks (bins)
lines(density(a60_30$polyA_length), col = "red", lwd = 2)
# List of loaded datasets and their corresponding names
datasets <- list(
a60_30 = a60_30,
a60_60 = a60_60,
a60_unmod = a60_unmod,
a120_1mod = a120_1mod,
a120_2mod = a120_2mod,
a120_4mod = a120_4mod,
a120_unmod = a120_unmod
)
# Loop through datasets and create individual plots
for (name in names(datasets)) {
# Extract the polyA_length column
polyA_length <- datasets[[name]]$polyA_length
# Set up a plot for each dataset
hist(polyA_length,
probability = TRUE,
main = paste("Density Plot of polyA Lengths -", name),
xlab = "PolyA Length",
ylab = "Density",
xlim = c(0, 10000),
border = "black",
breaks = 100)
# Add the density line in red
lines(density(polyA_length), col = "red", lwd = 2)
}
datasets <- list(
a60_30 = a60_30,
a60_60 = a60_60,
a60_unmod = a60_unmod,
a120_1mod = a120_1mod,
a120_2mod = a120_2mod,
a120_4mod = a120_4mod,
a120_unmod = a120_unmod
)
for (name in names(datasets)) {
polyA_length <- datasets[[name]]$polyA_length
hist(polyA_length,
probability = TRUE,
main = paste("Density Plot of polyA Lengths -", name),
xlab = "PolyA Length",
ylab = "Density",
xlim = c(0, 10000),
col = "lightblue"
border = "black",
datasets <- list(
a60_30 = a60_30,
a60_60 = a60_60,
a60_unmod = a60_unmod,
a120_1mod = a120_1mod,
a120_2mod = a120_2mod,
a120_4mod = a120_4mod,
a120_unmod = a120_unmod
)
for (name in names(datasets)) {
polyA_length <- datasets[[name]]$polyA_length
hist(polyA_length,
probability = TRUE,
main = paste("Density Plot of polyA Lengths -", name),
xlab = "PolyA Length",
ylab = "Density",
xlim = c(0, 10000),
col = "lightblue",
border = "black",
breaks = 100)
lines(density(polyA_length), col = "red", lwd = 2)
}
# List of loaded datasets and their corresponding names
datasets <- list(
a60_30 = a60_30,
a60_60 = a60_60,
a60_unmod = a60_unmod,
a120_1mod = a120_1mod,
a120_2mod = a120_2mod,
a120_4mod = a120_4mod,
a120_unmod = a120_unmod
)
# Find the maximum density across all datasets
max_density <- 0  # Start with zero
for (name in names(datasets)) {
polyA_length <- datasets[[name]]$polyA_length
max_density <- max(max_density, max(density(polyA_length)$y))
}
# Set the ylim to the maximum density value (add a small margin)
ylim_max <- min(max_density * 1.1, 0.0015)  # Slight margin above the max value
# Loop through datasets and create individual plots
for (name in names(datasets)) {
# Extract the polyA_length column
polyA_length <- datasets[[name]]$polyA_length
# Set up a plot for each dataset
hist(polyA_length,
probability = TRUE,
main = paste("Density Plot of polyA Lengths -", name),
xlab = "PolyA Length",
ylab = "Density",
xlim = c(0, 10000),
ylim = c(0, ylim_max),     # Set consistent y-axis limit
border = "black",
breaks = 100)
# Add the density line in red
lines(density(polyA_length), col = "red", lwd = 2)
}
# List of loaded datasets and their corresponding names
datasets <- list(
a60_30 = a60_30,
a60_60 = a60_60,
a60_unmod = a60_unmod,
a120_1mod = a120_1mod,
a120_2mod = a120_2mod,
a120_4mod = a120_4mod,
a120_unmod = a120_unmod
)
# Find the maximum density across all datasets
max_density <- 0  # Start with zero
for (name in names(datasets)) {
polyA_length <- datasets[[name]]$polyA_length
max_density <- max(max_density, max(density(polyA_length)$y))
}
# Set the ylim to the maximum density value (add a small margin)
ylim_max <- min(max_density * 1.1, 0.0015)  # Slight margin above the max value
# Loop through datasets and create individual plots
for (name in names(datasets)) {
# Extract the polyA_length column
polyA_length <- datasets[[name]]$polyA_length
# Set up a plot for each dataset
hist(polyA_length,
probability = TRUE,
main = paste("Density Plot of polyA Lengths -", name),
xlab = "PolyA Length",
ylab = "Density",
xlim = c(0, 10000),
ylim = c(0, ylim_max),     # Set consistent y-axis limit
border = "black",
col = "lightblue",
breaks = 100)
# Add the density line in red
lines(density(polyA_length), col = "red", lwd = 2)
}
# List of loaded datasets and their corresponding names
datasets <- list(
a60_30 = a60_30,
a60_60 = a60_60,
a60_unmod = a60_unmod,
a120_1mod = a120_1mod,
a120_2mod = a120_2mod,
a120_4mod = a120_4mod,
a120_unmod = a120_unmod
)
for (name in names(datasets)) {
polyA_length <- datasets[[name]]$polyA_length
hist(polyA_length,
probability = TRUE,
main = paste("Density Plot of polyA Lengths -", name),
xlab = "PolyA Length",
ylab = "Density",
xlim = c(0, 10000),
ylim = c(0, 0.0017),
border = "black",
col = "lightblue",
breaks = 100)
# Add the density line in red
lines(density(polyA_length), col = "red", lwd = 2)
}
# List of loaded datasets and their corresponding names
datasets <- list(
a60_30 = a60_30,
a60_60 = a60_60,
a60_unmod = a60_unmod,
a120_1mod = a120_1mod,
a120_2mod = a120_2mod,
a120_4mod = a120_4mod,
a120_unmod = a120_unmod
)
for (name in names(datasets)) {
polyA_length <- datasets[[name]]$polyA_length
hist(polyA_length,
probability = TRUE,
main = paste("Density Plot of polyA Lengths -", name),
xlab = "PolyA Length",
ylab = "Density",
xlim = c(0, 10000),
ylim = c(0, 0.0020),
border = "black",
col = "lightblue",
breaks = 100)
# Add the density line in red
lines(density(polyA_length), col = "red", lwd = 2)
}
# List of loaded datasets and their corresponding names
datasets <- list(
a60_30 = a60_30,
a60_60 = a60_60,
a60_unmod = a60_unmod,
a120_1mod = a120_1mod,
a120_2mod = a120_2mod,
a120_4mod = a120_4mod,
a120_unmod = a120_unmod
)
for (name in names(datasets)) {
polyA_length <- datasets[[name]]$polyA_length
hist(polyA_length,
probability = TRUE,
main = paste("Density Plot of polyA Lengths -", name),
xlab = "PolyA Length",
ylab = "Density",
xlim = c(0, 10000),
ylim = c(0, 0.0020),
border = "black",
col = "lightblue",
breaks = 1000)
# Add the density line in red
lines(density(polyA_length), col = "red", lwd = 2)
}
# List of loaded datasets and their corresponding names
datasets <- list(
a60_30 = a60_30,
a60_60 = a60_60,
a60_unmod = a60_unmod,
a120_1mod = a120_1mod,
a120_2mod = a120_2mod,
a120_4mod = a120_4mod,
a120_unmod = a120_unmod
)
for (name in names(datasets)) {
polyA_length <- datasets[[name]]$polyA_length
hist(polyA_length,
probability = TRUE,
main = paste("Density Plot of polyA Lengths -", name),
xlab = "PolyA Length",
ylab = "Density",
xlim = c(0, 10000),
ylim = c(0, 0.0020),
border = "black",
col = "lightblue",
breaks = 500)
# Add the density line in red
lines(density(polyA_length), col = "red", lwd = 2)
}
# List of loaded datasets and their corresponding names
datasets <- list(
a60_30 = a60_30,
a60_60 = a60_60,
a60_unmod = a60_unmod,
a120_1mod = a120_1mod,
a120_2mod = a120_2mod,
a120_4mod = a120_4mod,
a120_unmod = a120_unmod
)
for (name in names(datasets)) {
polyA_length <- datasets[[name]]$polyA_length
hist(polyA_length,
probability = TRUE,
main = paste("Density Plot of polyA Lengths -", name),
xlab = "PolyA Length",
ylab = "Density",
xlim = c(0, 10000),
ylim = c(0, 0.0020),
border = "black",
col = "lightblue",
breaks = 200)
# Add the density line in red
lines(density(polyA_length), col = "red", lwd = 2)
}
for (name in names(datasets)) {
# Extract the polyA_length column
polyA_length <- datasets[[name]]$polyA_length
# Log transformation (log base 10)
log_polyA_length <- log10(polyA_length + 1)  # Adding 1 to avoid log(0)
# Set up a plot for each dataset
hist(log_polyA_length,
probability = TRUE,
main = paste("Density Plot of log-transformed polyA Lengths -", name),
xlab = "Log10(PolyA Length + 1)",  # Label updated to reflect transformation
ylab = "Density",
xlim = c(0, 4),                  # Adjust x-axis limit after log-transformation (log10 of 10000 ~ 4)
ylim = c(0, 0.0020),             # Set the y-axis range
border = "black",
col = "lightblue",
breaks = 200)                   # Number of bins for histogram
# Add the density line in red
lines(density(log_polyA_length), col = "red", lwd = 2)
}
for (name in names(datasets)) {
# Extract the polyA_length column
polyA_length <- datasets[[name]]$polyA_length
# Log transformation (log base 10)
log_polyA_length <- log10(polyA_length + 1)  # Adding 1 to avoid log(0)
# Set up a plot for each dataset
hist(log_polyA_length,
probability = TRUE,
main = paste("Density Plot of log-transformed polyA Lengths -", name),
xlab = "Log10(PolyA Length + 1)",  # Label updated to reflect transformation
ylab = "Density",
xlim = c(0, 4),                  # Adjust x-axis limit after log-transformation (log10 of 10000 ~ 4)
border = "black",
col = "lightblue",
breaks = 200)                   # Number of bins for histogram
# Add the density line in red
lines(density(log_polyA_length), col = "red", lwd = 2)
}
for (name in names(datasets)) {
# Extract the polyA_length column
polyA_length <- datasets[[name]]$polyA_length
# Log transformation (log base 10)
log_polyA_length <- log10(polyA_length + 1)  # Adding 1 to avoid log(0)
# Set up a plot for each dataset
hist(log_polyA_length,
probability = TRUE,
main = paste("Density Plot of log-transformed polyA Lengths -", name),
xlab = "Log10(PolyA Length + 1)",  # Label updated to reflect transformation
ylab = "Density",
border = "black",
col = "lightblue",
breaks = 50)                   # Number of bins for histogram
# Add the density line in red
lines(density(log_polyA_length), col = "red", lwd = 2)
}
for (name in names(datasets)) {
# Extract the polyA_length column
polyA_length <- datasets[[name]]$polyA_length
# Log transformation (log base 10)
log_polyA_length <- log10(polyA_length + 1)  # Adding 1 to avoid log(0)
# Set up a plot for each dataset
hist(log_polyA_length,
probability = TRUE,
main = paste("Density Plot of log-transformed polyA Lengths -", name),
xlab = "Log10(PolyA Length + 1)",  # Label updated to reflect transformation
ylab = "Density",
border = "black",
col = "lightblue",
breaks = 100)                   # Number of bins for histogram
# Add the density line in red
lines(density(log_polyA_length), col = "red", lwd = 2)
}
for (name in names(datasets)) {
# Extract the polyA_length column
polyA_length <- datasets[[name]]$polyA_length
# Log transformation (log base 10)
log_polyA_length <- log10(polyA_length + 1)  # Adding 1 to avoid log(0)
# Set up a plot for each dataset
hist(log_polyA_length,
probability = TRUE,
main = paste("Density Plot of log-transformed polyA Lengths -", name),
xlab = "Log10(PolyA Length + 1)",  # Label updated to reflect transformation
ylab = "Density",
border = "black",
col = "lightblue",
xlim = c(2.5,4.0),
ylim = c(0,10)
breaks = 100)                   # Number of bins for histogram
for (name in names(datasets)) {
# Extract the polyA_length column
polyA_length <- datasets[[name]]$polyA_length
# Log transformation (log base 10)
log_polyA_length <- log10(polyA_length + 1)  # Adding 1 to avoid log(0)
# Set up a plot for each dataset
hist(log_polyA_length,
probability = TRUE,
main = paste("Density Plot of log-transformed polyA Lengths -", name),
xlab = "Log10(PolyA Length + 1)",  # Label updated to reflect transformation
ylab = "Density",
border = "black",
col = "lightblue",
xlim = c(2.5,4.0),
ylim = c(0,10),
breaks = 100)                   # Number of bins for histogram
# Add the density line in red
lines(density(log_polyA_length), col = "red", lwd = 2)
}
for (name in names(datasets)) {
# Extract the polyA_length column
polyA_length <- datasets[[name]]$polyA_length
# Log transformation (log base 10)
log_polyA_length <- log10(polyA_length)  # Adding 1 to avoid log(0)
# Set up a plot for each dataset
hist(log_polyA_length,
probability = TRUE,
main = paste("Density Plot of log-transformed polyA Lengths -", name),
xlab = "Log10(PolyA Length)",  # Label updated to reflect transformation
ylab = "Density",
border = "black",
col = "lightblue",
xlim = c(2.5,4.0),
ylim = c(0,10),
breaks = 100)                   # Number of bins for histogram
# Add the density line in red
lines(density(log_polyA_length), col = "red", lwd = 2)
}
for (name in names(datasets)) {
polyA_length <- datasets[[name]]$polyA_length
log_polyA_length <- log10(polyA_length)
hist(log_polyA_length,
probability = TRUE,
main = paste("Density Plot of log-transformed polyA Lengths -", name),
xlab = "Log10(PolyA Length)",
ylab = "Density",
border = "black",
col = "lightblue",
xlim = c(2.5,4.0),
ylim = c(0,10),
breaks = 100)
lines(density(log_polyA_length), col = "red", lwd = 2)
}
---
title: "PolyATails Lengths"
tinytex::reinstall_tinytex(repository = "https://cloud.r-project.org/")
library(tinytex)
